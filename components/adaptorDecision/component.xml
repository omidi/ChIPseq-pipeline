<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<component>
    <name>adaptorDecision</name>
    <version>1.0</version>
    <doc>
    This component takes a fraction of the input .fasta file and tries to find a putative adaptor sequence.
    It does this by running the FMI toolbox filterAdaptors.pl script on the input with four adaptor sequences (knwon from illumina) and subwords thereof.
    The adaptor that has most full matches is returned.
    </doc>
    <launcher type="python">
        <argument name="file" value="adaptorDecision.py" />
    </launcher>
    <requires>URL="http://www.python.org/not" type="manual">python</requires>
    <inputs>
        <input name="in_file" type = "BinaryFile">
            <doc>Fasta file (output from SilviaQF).</doc>
        </input>
    </inputs>
    <outputs>
        <output name="intermediate_dir" type="BinaryFolder">
            <doc>Directory where results are stored and also some temporary files.</doc>
        </output>
        <output name="finalAdaptor" type="BinaryFile">
            <doc>File containing the final adaptor to proceed with.</doc>
        </output>
        <output name="log_file" type="BinaryFile">
            <doc>log_file.</doc>
        </output>
        <output name="plot" type="PDF">
            <doc>Plot of the subword length of the chosen adaptor versus number of full matches to the smaller fasta file.</doc>
        </output>
    </outputs>
    <parameters>
            <parameter name="reads_number" type="int" default="250000">
                <doc>Total number of reads contained in the smaller file.</doc>
            </parameter>
            <parameter name="perlPATH" type="string" default="">
                <doc>Path to perl.</doc>
            </parameter>
            <parameter name="FMIpath" type="string" default="">
                <doc>Path to FMI pipeline directory to find FMI tools.</doc>
            </parameter>
            <parameter name="adapters" type="string" default="">
                <doc>A space separated list of adapter sequences that gets added to the default list from illumina</doc>
            </parameter>
    </parameters>
</component>
